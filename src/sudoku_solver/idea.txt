Encode each cell in the sudoku with 9 booleans.
For each cell there is exactly 1 of those 9 true.
For each number in a row/column/3by3 there is exactly 1 var true.

Given cells as unit constraint, (and perhaps remove the constraints that are not needed)

exactly 1 out of n can be encoded as follows (not sure if it is the best way)
x_1 V x_2 V ... V x_n
for i in 1..n-1:
  for j in i+1..n:
    ~x_i V ~x_j

solver expects var starting with index 1 to n
returns a vectors with size n, start index 0

Number each sudoku cell, starting in the top left to the top right, and then downwards.
given the result, the number for cell i can be computed as follows:
for j in range 1..9:
  if result[i * 9 + j - 1]
    return j
